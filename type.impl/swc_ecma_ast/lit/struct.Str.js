(function() {
    var type_impls = Object.fromEntries([["swc_ecma_codegen",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AstNode-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#impl-AstNode-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"swc_common/trait.AstNode.html\" title=\"trait swc_common::AstNode\">AstNode</a> for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.TYPE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#associatedconstant.TYPE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"swc_common/trait.AstNode.html#associatedconstant.TYPE\" class=\"constant\">TYPE</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.str.html\">str</a> = &quot;StringLiteral&quot;</h4></section></div></details>","AstNode","swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#impl-Clone-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#impl-Debug-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde_core/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a>, &lt;__D as <a class=\"trait\" href=\"serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde_core/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde_core::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde_core/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EqIgnoreSpan-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#272\">Source</a><a href=\"#impl-EqIgnoreSpan-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"swc_common/eq/trait.EqIgnoreSpan.html\" title=\"trait swc_common::eq::EqIgnoreSpan\">EqIgnoreSpan</a> for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.eq_ignore_span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#273\">Source</a><a href=\"#method.eq_ignore_span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_common/eq/trait.EqIgnoreSpan.html#tymethod.eq_ignore_span\" class=\"fn\">eq_ignore_span</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","EqIgnoreSpan","swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26str%3E-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#289\">Source</a><a href=\"#impl-From%3C%26str%3E-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#289\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&str>","swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAtom%3E-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#278\">Source</a><a href=\"#impl-From%3CAtom%3E-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"swc_atoms/struct.Atom.html\" title=\"struct swc_atoms::Atom\">Atom</a>&gt; for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#280\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"swc_atoms/struct.Atom.html\" title=\"struct swc_atoms::Atom\">Atom</a>) -&gt; <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Atom>","swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCow%3C'_,+str%3E%3E-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#291\">Source</a><a href=\"#impl-From%3CCow%3C'_,+str%3E%3E-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.str.html\">str</a>&gt;&gt; for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#291\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Cow<'_, str>>","swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CString%3E-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#290\">Source</a><a href=\"#impl-From%3CString%3E-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#290\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(src: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<String>","swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#183\">Source</a><a href=\"#impl-Hash-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#183\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Node-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_codegen/lit.rs.html#43\">Source</a><a href=\"#impl-Node-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"swc_ecma_codegen/trait.Node.html\" title=\"trait swc_ecma_codegen::Node\">Node</a> for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.emit_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_codegen/lit.rs.html#43\">Source</a><a href=\"#method.emit_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_ecma_codegen/trait.Node.html#tymethod.emit_with\" class=\"fn\">emit_with</a>&lt;W, S&gt;(&amp;self, emitter: &amp;mut <a class=\"struct\" href=\"swc_ecma_codegen/struct.Emitter.html\" title=\"struct swc_ecma_codegen::Emitter\">Emitter</a>&lt;'_, W, S&gt;) -&gt; <a class=\"type\" href=\"swc_ecma_codegen/type.Result.html\" title=\"type swc_ecma_codegen::Result\">Result</a><div class=\"where\">where\n    W: <a class=\"trait\" href=\"swc_ecma_codegen/text_writer/trait.WriteJs.html\" title=\"trait swc_ecma_codegen::text_writer::WriteJs\">WriteJs</a>,\n    S: <a class=\"trait\" href=\"swc_common/errors/trait.SourceMapper.html\" title=\"trait swc_common::errors::SourceMapper\">SourceMapper</a> + <a class=\"trait\" href=\"swc_ecma_ast/source_map/trait.SourceMapperExt.html\" title=\"trait swc_ecma_ast::source_map::SourceMapperExt\">SourceMapperExt</a>,</div></h4></section></div></details>","Node","swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#impl-PartialEq-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#263\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#impl-Serialize-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde_core/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde_core/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde_core::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde_core/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde_core::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde_core/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Spanned-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#impl-Spanned-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"swc_common/pos/trait.Spanned.html\" title=\"trait swc_common::pos::Spanned\">Spanned</a> for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#method.span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_common/pos/trait.Spanned.html#tymethod.span\" class=\"fn\">span</a>(&amp;self) -&gt; <a class=\"struct\" href=\"swc_common/syntax_pos/struct.Span.html\" title=\"struct swc_common::syntax_pos::Span\">Span</a></h4></section></summary><div class='docblock'>Get span of <code>self</code>.</div></details><section id=\"method.span_lo\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_common/pos.rs.html#17\">Source</a><a href=\"#method.span_lo\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_common/pos/trait.Spanned.html#method.span_lo\" class=\"fn\">span_lo</a>(&amp;self) -&gt; <a class=\"struct\" href=\"swc_common/syntax_pos/struct.BytePos.html\" title=\"struct swc_common::syntax_pos::BytePos\">BytePos</a></h4></section><section id=\"method.span_hi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_common/pos.rs.html#22\">Source</a><a href=\"#method.span_hi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_common/pos/trait.Spanned.html#method.span_hi\" class=\"fn\">span_hi</a>(&amp;self) -&gt; <a class=\"struct\" href=\"swc_common/syntax_pos/struct.BytePos.html\" title=\"struct swc_common::syntax_pos::BytePos\">BytePos</a></h4></section></div></details>","Spanned","swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#217\">Source</a><a href=\"#impl-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#219\">Source</a><h4 class=\"code-header\">pub fn <a href=\"swc_ecma_ast/lit/struct.Str.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.from_tpl_raw\" class=\"method\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#223\">Source</a><h4 class=\"code-header\">pub fn <a href=\"swc_ecma_ast/lit/struct.Str.html#tymethod.from_tpl_raw\" class=\"fn\">from_tpl_raw</a>(tpl_raw: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"struct\" href=\"swc_atoms/struct.Atom.html\" title=\"struct swc_atoms::Atom\">Atom</a></h4></section></div></details>",0,"swc_ecma_codegen::text_writer::Symbol"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Take-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#195\">Source</a><a href=\"#impl-Take-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"swc_common/util/take/trait.Take.html\" title=\"trait swc_common::util::take::Take\">Take</a> for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.dummy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#196\">Source</a><a href=\"#method.dummy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_common/util/take/trait.Take.html#tymethod.dummy\" class=\"fn\">dummy</a>() -&gt; <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h4></section></summary><div class='docblock'>Create a dummy value of this type.</div></details><section id=\"method.take\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_common/util/take.rs.html#11\">Source</a><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_common/util/take/trait.Take.html#method.take\" class=\"fn\">take</a>(&amp;mut self) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_with_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/swc_common/util/take.rs.html#20-22\">Source</a><a href=\"#method.map_with_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"swc_common/util/take/trait.Take.html#method.map_with_mut\" class=\"fn\">map_with_mut</a>&lt;F&gt;(&amp;mut self, op: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Self) -&gt; Self,</div></h4></section></summary><div class='docblock'>Mutate <code>self</code> using <code>op</code>, which accepts owned data.</div></details></div></details>","Take","swc_ecma_codegen::text_writer::Symbol"],["<section id=\"impl-Eq-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#183\">Source</a><a href=\"#impl-Eq-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section>","Eq","swc_ecma_codegen::text_writer::Symbol"],["<section id=\"impl-StructuralPartialEq-for-Str\" class=\"impl\"><a class=\"src rightside\" href=\"src/swc_ecma_ast/lit.rs.html#182\">Source</a><a href=\"#impl-StructuralPartialEq-for-Str\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"swc_ecma_ast/lit/struct.Str.html\" title=\"struct swc_ecma_ast::lit::Str\">Str</a></h3></section>","StructuralPartialEq","swc_ecma_codegen::text_writer::Symbol"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[30801]}