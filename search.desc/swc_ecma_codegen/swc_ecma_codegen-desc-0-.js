searchState.loadedDescShard("swc_ecma_codegen", 0, "Contains the error value\nContains the success value\nForces the code generator to use only ascii characters.\n<code>1.toString</code> is an invalid property access, should emit a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf true, the code generator will emit the lastest …\nTransform escaped newline <code>&#39;\\n&#39;</code> of <code>TplElement</code> to a newline …\nThe target runtime environment.\nGenerate a code from a syntax node using default options.\nGenerate a code from a syntax node using default options.\nGenerate a code from a syntax node using default options.\nTransform escaped newline <code>&#39;\\n&#39;</code> of <code>TplElement</code> to a newline …\nPorted from <code>createTextWriter</code> of the typescript compiler.\nTODO\nEcmascript writer.\nIf true, the code generator will skip <strong>modification</strong> of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUse <code>None</code> value only for transformations to avoid …\nSets the indentation string. Defaults to four spaces.\nThis <em>may</em> write semicolon.\nLeftmost recursion")