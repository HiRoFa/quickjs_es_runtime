searchState.loadedDescShard("swc_ecma_transforms_optimization", 0, "The key will be compared using […\nAssert in debug mode. This is noop in release build.\nReturns the argument unchanged.\nCreate a global inlining pass, which replaces expressions …\nCalls <code>U::from(self)</code>.\nTransform to optimize performance of literals.\nPorted from closure compiler.\nNot intended for general use. Use [simplifier] instead.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPerforms simplify-expr, inlining, remove-dead-branch and …\nThis pass is kind of inliner, but it’s far faster.\nNote: This becomes parallel if <code>concurrent</code> feature is …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIf this Mark is applied to a function expression, it’s …\nIf false, imports with side effects will be removed.\nIf true, top-level items will be removed if they are not …\nDeclarations with a symbol in this set will be preserved.\nAll bool fields defaults to false.\nNot intended for general use. Use [simplifier] instead.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<strong>NOTE</strong>: This is <strong>NOT</strong> a public API. DO NOT USE.\n<strong>NOTE</strong>: This is <strong>NOT</strong> a public API. DO NOT USE.\n<strong>NOTE</strong>: This is <strong>NOT</strong> a public API. DO NOT USE.\nReturns the argument unchanged.\nNote: this pass assumes that resolver is invoked before …\nCalls <code>U::from(self)</code>.")