searchState.loadedDescShard("bytes_str", 0, "A reference-counted <code>str</code> backed by Bytes.\nString but backed by a BytesMut\nAdvances the BytesStr by <code>n</code> bytes.\nReturns a byte slice of this String’s contents.\nReturns a mutable string slice containing the entire …\nReturns a string slice containing the entire BytesStr.\nReturns a string slice containing the entire BytesString.\nReturns the capacity of this String, in bytes.\nClears the BytesString, removing all bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a BytesMut into a BytesString without checking if …\nCreates a new BytesStr from an owner.\nCreates a new BytesStr from a static string.\nCreates a new BytesStr from a static UTF-8 slice.\nCreates a new BytesStr from a static UTF-8 slice without …\nCreates a new BytesStr from a str.\nCreates a new BytesStr from a String.\nCreates a new BytesStr from a Bytes.\nConverts a BytesMut into a BytesString if the bytes are …\nCreates a new BytesStr from a Bytes.\nConverts a slice of bytes into a BytesString if the bytes …\nCreates a new BytesStr from a Bytes without checking if …\nCreates a new BytesStr from a Bytes without checking if …\nCreates a new BytesStr from a Vec.\nCreates a new BytesStr from a Vec without checking if the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the BytesStr into a Bytes.\nConverts the BytesString into a BytesMut.\nConverts the BytesStr into a String.\nConverts a BytesString into a String.\nConverts the BytesStr into a Vec.\nConverts the BytesString into a Vec.\nReturns true if the BytesStr is empty.\nReturns true if the BytesString has a length of 0.\nReturns the length of the BytesStr.\nReturns the length of this String, in bytes.\nCreates a new empty BytesStr.\nReturns a new, empty BytesString.\nAppends a character to the end of this BytesString.\nAppends a string slice to the end of this BytesString.\nReserves the minimum capacity for exactly <code>additional</code> more …\nReturns a slice of the BytesStr.\nSee Bytes::slice_ref\nSplits the string into two at the given index.\nTruncates the BytesString to the specified length.\nReturns a new, empty BytesString with the specified …")