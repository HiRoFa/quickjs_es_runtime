searchState.loadedDescShard("browserslist", 0, "<strong>browserslist-rs</strong> is a Rust-based implementation of …\nThe given browser name can’t be found.\nRepresentation of browser name (or <code>node</code>) and its version.\nDuplicated configuration found.\nDuplicated section in configuration.\nThe errors may occur when querying with browserslist.\nFailed to access the current working directory.\nFailed to read config.\nFailed to resolve package in <code>extends</code> query.\nDate format is invalid.\nInvalid extend name\nMissing config corresponding to specific environment.\nMissing <code>browserslist</code> field in <code>package.json</code> file.\nError of parsing query.\nQuery can’t start with a negated query which starts with …\nOptions for controlling the behavior of browserslist.\nUnknown browser feature.\nThe given version of the given browser can’t be found.\nThe given Electron version can’t be found.\nThe given Node.js version can’t be found.\nQuery can’t be recognized.\nUnknown Can I Use region.\nCurrent environment doesn’t support querying <code>current node</code>…\nCurrent environment doesn’t support querying <code>extends</code>.\nYear overflow.\nPath to configuration file with queries.\nDisable security checks for <code>extends</code> query.\nProcessing environment. It will be used to take right …\nLoad queries from configuration with environment …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf <code>true</code>, ignore unknown versions then return empty result; …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUse desktop browsers if Can I Use doesn’t have data …\nReturn browser name, or <code>node</code>.\nFile or directory path for looking for configuration file.\nResolve browserslist queries.\nThrow error on missing env.\nReturn version string.")