searchState.loadedDescShard("hstr", 0, "See Atom for more information.\nAn immutable string which is cheap to clone, compare, …\nA store that stores Atoms. Can be merged with other …\nA WTF-8 encoded atom. This is like Atom, but can contain …\nCreate an atom from a string literal. This atom is never …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a WTF-8 encoded Wtf8Atom to a regular UTF-8 Atom …\nCleans up atoms in the global store that are no longer …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLike <code>to_ascii_lowercase</code>.\nLike <code>to_ascii_uppercase</code>.\nImplementation of the WTF-8 encoding.\nA Unicode code point: from U+0000 to U+10FFFF.\nA borrowed slice of well-formed WTF-8 data.\nAn owned, growable string of well-formed WTF-8 data.\nIterator for the code points of a WTF-8 string.\nReturn the underlying WTF-8 bytes.\nTry to convert the string to UTF-8 and return a <code>&amp;str</code> slice.\nReturn the code point at <code>position</code> if it is in the ASCII …\nReturns the number of bytes that this string buffer can …\nReturn an iterator for the string’s code points.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a WTF-8 from a WTF-8 encoded byte slice.\nCreate a new <code>CodePoint</code> from a <code>char</code>.\nCreate a WTF-8 string from a potentially ill-formed UTF-16 …\nCreate a WTF-8 slice from a UTF-8 <code>&amp;str</code> slice.\nCreate a WTF-8 string from an UTF-8 <code>&amp;str</code> slice.\nCreate a WTF-8 string from an UTF-8 <code>String</code>.\nCreate a new <code>CodePoint</code> if the value is a valid code point.\nUnsafely create a new <code>CodePoint</code> without checking the value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the WTF-8 string and try to convert it to UTF-8.\nConsume the WTF-8 string and convert it lossily to UTF-8.\nReturn <code>true</code> if the string has a length of zero bytes.\nReturn the length, in WTF-8 bytes.\nCreate an new, empty WTF-8 string.\nAppend a code point at the end of the string.\nAppend a Unicode scalar value at the end of the string.\nAppend an UTF-8 slice at the end of the string.\nAppend a WTF-8 slice at the end of the string.\nReserves capacity for at least <code>additional</code> more bytes to be …\nReturn a slice of the given string for the byte range […\nReturn a slice of the given string from byte <code>begin</code> to its …\nReturn a slice of the given string from its beginning to …\nOptionally return a Unicode scalar value for the code …\nReturn a Unicode scalar value for the code point.\nConvert the WTF-8 string to potentially ill-formed UTF-16 …\nLossily convert the string to UTF-8. Return an UTF-8 <code>&amp;str</code> …\nReturn the numeric value of the code point.\nShortens a string to the specified length.\nCreate an new, empty WTF-8 string with pre-allocated …")